version: '3.9'
services:
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: timescaledb
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: mobility
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/db_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: mobility-backend
    restart: unless-stopped
    depends_on:
      timescaledb:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:example@timescaledb:5432/mobility
      MODEL_DIR: /app/ml/model_store
    ports:
      - "8000:8000"
    volumes:
      - ./backend/ml:/app/ml
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    container_name: mobility-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://backend:8000
      - VITE_API_URL=http://backend:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend

  mock_data:
    build: ./mock_data
    container_name: mock-generator
    restart: unless-stopped
    environment:
      BACKEND_URL: http://backend:8000
    depends_on:
      - backend
    command: python generator.py

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/rules.yml:/etc/prometheus/rules.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3001:3000"
    depends_on:
      - prometheus

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
    pid: host
    network_mode: host
    volumes:
      - /:/host:ro,rslave

volumes:
  db_data:
